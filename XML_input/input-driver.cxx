// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "input-pskel.hxx"

#include <iostream>

int
main (int argc, char* argv[])
{
  if (argc != 2)
  {
    std::cerr << "usage: " << argv[0] << " file.xml" << std::endl;
    return 1;
  }

  try
  {
    // Instantiate individual parsers.
    //
    ::parameters_pskel parameters_p;
    ::coordinates_pskel coordinates_p;
    ::name_pskel name_p;
    ::xml_schema::short_pimpl short_p;
    ::values_pskel values_p;
    ::name1_pskel name1_p;
    ::xml_schema::float_pimpl float_p;

    // Connect the parsers together.
    //
    parameters_p.parsers (coordinates_p,
                          values_p);

    coordinates_p.parsers (name_p);

    name_p.parsers (short_p,
                    short_p,
                    short_p);

    values_p.parsers (name1_p);

    name1_p.parsers (float_p);

    // Parse the XML document.
    //
    ::xml_schema::document doc_p (parameters_p, "parameters");

    parameters_p.pre ();
    doc_p.parse (argv[1]);
    parameters_p.post_parameters ();
  }
  catch (const ::xml_schema::exception& e)
  {
    std::cerr << e << std::endl;
    return 1;
  }
  catch (const std::ios_base::failure&)
  {
    std::cerr << argv[1] << ": error: io failure" << std::endl;
    return 1;
  }
}

